#include <Bpp/Numeric/Matrix/Matrix.h>
#include <Bpp/Numeric/Matrix/MatrixTools.h>
namespace gf {

#include "mapping.h"
#include <Bpp/Numeric/Matrix/MatrixTools.h>

void static project_HC(bpp::Matrix<double>& m) {
m.resize(94, 15);
    bpp::MatrixTools::fill(m, 0.0);
m(39, 0) = 1.0;
m(70, 0) = 1.0;
m(69, 0) = 1.0;
m(1, 0) = 1.0;
m(72, 0) = 1.0;
m(74, 0) = 1.0;
m(6, 0) = 1.0;
m(71, 0) = 1.0;
m(81, 1) = 1.0;
m(38, 1) = 1.0;
m(82, 1) = 1.0;
m(79, 1) = 1.0;
m(32, 1) = 1.0;
m(89, 1) = 1.0;
m(85, 1) = 1.0;
m(83, 1) = 1.0;
m(17, 2) = 1.0;
m(20, 2) = 1.0;
m(14, 2) = 1.0;
m(8, 2) = 1.0;
m(24, 2) = 1.0;
m(3, 2) = 1.0;
m(12, 2) = 1.0;
m(13, 2) = 1.0;
m(30, 3) = 1.0;
m(36, 3) = 1.0;
m(35, 3) = 1.0;
m(34, 3) = 1.0;
m(93, 3) = 1.0;
m(19, 3) = 1.0;
m(40, 3) = 1.0;
m(73, 3) = 1.0;
m(77, 3) = 1.0;
m(11, 3) = 1.0;
m(31, 3) = 1.0;
m(75, 3) = 1.0;
m(28, 3) = 1.0;
m(23, 3) = 1.0;
m(16, 3) = 1.0;
m(26, 3) = 1.0;
m(57, 4) = 1.0;
m(5, 4) = 1.0;
m(66, 5) = 1.0;
m(63, 5) = 1.0;
m(64, 5) = 1.0;
m(65, 5) = 1.0;
m(41, 6) = 1.0;
m(37, 6) = 1.0;
m(29, 6) = 1.0;
m(62, 6) = 1.0;
m(68, 6) = 1.0;
m(61, 6) = 1.0;
m(67, 6) = 1.0;
m(60, 6) = 1.0;
m(88, 7) = 1.0;
m(84, 7) = 1.0;
m(80, 7) = 1.0;
m(87, 7) = 1.0;
m(59, 8) = 1.0;
m(49, 8) = 1.0;
m(55, 8) = 1.0;
m(58, 8) = 1.0;
m(50, 9) = 1.0;
m(48, 9) = 1.0;
m(46, 9) = 1.0;
m(44, 9) = 1.0;
m(42, 9) = 1.0;
m(54, 9) = 1.0;
m(45, 9) = 1.0;
m(52, 9) = 1.0;
m(91, 10) = 1.0;
m(33, 10) = 1.0;
m(27, 10) = 1.0;
m(90, 10) = 1.0;
m(86, 10) = 1.0;
m(78, 10) = 1.0;
m(76, 10) = 1.0;
m(92, 10) = 1.0;
m(2, 11) = 1.0;
m(4, 11) = 1.0;
m(0, 11) = 1.0;
m(7, 11) = 1.0;
m(25, 12) = 1.0;
m(21, 12) = 1.0;
m(15, 12) = 1.0;
m(9, 12) = 1.0;
m(22, 13) = 1.0;
m(10, 13) = 1.0;
m(18, 13) = 1.0;
m(51, 13) = 1.0;
m(47, 14) = 1.0;
m(56, 14) = 1.0;
m(43, 14) = 1.0;
m(53, 14) = 1.0;
}
void expand_HC(const std::vector<double>& sep_system, std::vector<double> &mi_system) {
mi_system[0] = sep_system[0];
mi_system[1] = sep_system[2];
mi_system[3] = sep_system[1];
mi_system[93] = sep_system[3];
}
}
