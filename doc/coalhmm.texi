\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename coalhmm.info
@settitle CoalHMM Manual 1.0.3
@documentencoding UTF-8
@afourpaper
@dircategory Science Biology Genetics
@direntry
* coalhmm: (coalhmm)                CoalHMM analysis.
@end direntry
@c %**end of header

@include version.texi

@copying
This is the manual of the CoalHMM software, version @value{VERSION}, @value{UPDATED}.

Copyright @copyright{} 2011
@end copying

@titlepage
@title CoalHMM Manual
@author Julien Dutheil
@author @email{dutheil@@evolbio.mpg.de}

@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1fill1
@insertcopying
@end titlepage

@c Output the table of contents at the beginning.
@contents

@ifnottex
@node Top, Introduction, (dir), (dir)
@top The CoalHMM Manual

@insertcopying

@menu
* Introduction::                Introducing the CoalHMM software and methods and this manual.                
* Syntax::                      A general description of the syntax used to communicate with the programs.
* Reference::                   The list of options supported by the coalhmm program.                      

@detailmenu
 --- The Detailed Node Listing ---

Bio++ Program Suite Reference

* Input::                       
* Estimate::                    
* Simulate::                    

Fitting a coalHMM model

* ILS::                         
* Divergence::                  
* Output::                      

@end detailmenu
@end menu
@end ifnottex

@c ------------------------------------------------------------------------------------------------------------------

@node Introduction, Syntax, Top, Top
@chapter Introduction

This package implement the so-called coalescent hidden Markov models. These algorithms are coverred by the following articles:

@table @emph
@item Mailund T, Dutheil JY, Hobolth A, Lunter G, Schierup MH
Estimating divergence time and ancestral effective population size of Bornean and Sumatran Orangutan subspecies using a coalescent hidden Markov model.
PLoS Genet. 2011 Mar 3;7(3):e1001319

@item Hobolth A, Dutheil JY, Hawks J, Schierup MH, Mailund T.
Incomplete lineage sorting patterns among human, chimpanzee, and orangutan suggest recent orangutan speciation and widespread selection.
Genome Res. 2011 Mar;21(3):349-56.

@item Dutheil JY, Ganapathy G, Hobolth A, Mailund T, Uyenoyama MK, Schierup MH.
Ancestral population genomics: the coalescent hidden Markov model approach.
Genetics. 2009 Sep;183(1):259-74.

@item Hobolth A, Christensen OF, Mailund T, Schierup MH.
Genomic relationships and speciation times of human, chimpanzee, and gorilla inferred from a coalescent hidden Markov model.
PLoS Genet. 2007 Feb 23;3(2):e7.

@end table

This manual describes how to run the analyses performed in these works.

@c ------------------------------------------------------------------------------------------------------------------

@node Syntax, Reference, Introduction, Top
@chapter Syntax description

@section Calling the programs and writing the option files.

The coalhmm program is command line-driven.
Arguments may be passed as @command{parameter=value} options, either directly to the command line or
using an option file:
@cartouche
@example
coalhmm parameter1=value1 parameter2=value2 ... parameterN=valueN
@end example
@end cartouche
or
@cartouche
@example
coalhmm param=option_file
@end example
@end cartouche
Option files contain @command{parameter=value} lines, with only one parameter per line.
They can be written from scratch using a regular text editor, but since these files can potentially turn to be quite complex, it is probably wiser to start with a sample provided along with the program (if any!).

Extra-space may be included between parameter names, equal sign and value:
@cartouche
@example
first_parameter   = value1
second_parameter  = value2
@end example
@end cartouche
and lines can be broken using the backslash character:
@cartouche
@example
parameter = value1,\
            value2,\
            value3
@end example
@end cartouche

Comment may be included, in either scripting format:
@cartouche
@example
# This is a comment
@end example
@end cartouche
C format:
@cartouche
@example
/* This is a comment
*/
@end example
@end cartouche
or C++ format:
@cartouche
@example
// This is a comment
@end example
@end cartouche
Command line and file options may be combined:
@cartouche
@example
coalhmm param=option_file parameterX=valueX
@end example
@end cartouche
In case @command{parameterX} is specified in both option file and command line, the command line value will be used.
This allows to run the programs several times by changing a single option, like the name of the data set for instance.

Option files can be nested, by using @command{param=nestedoptionfile} within an option file, as with the command line.
It is possible to use this option as often as needed, this will load all the required option files.

@section Different types of options

The next chapters describe the whole set of options available in the CoalHMM package.
For each parameter, the type of parameter value expected is defined as:
@table @command
@item @{chars@}
A character chain

@item @{path@}
A file path, which may be absolute or related to the current directory

@item @{int@}
An integer

@item @{int@}, @{int>0@}, @{int>=0@}, @{int[2,10]@}
An integer, a positive integer, a positive non-null integer, an
integer falling between 2 and 10

@item @{real@}, @{real>0@}, etc
A real number, a positive real number, etc.

@item @{boolean@}
A Boolean value, which may be one of 'yes', 'no', 'true' or 'false'

@item @{xxx|yyy|zzz@}
A set of allowed values

@item @{list<type>@}
A list of values of specified type, separated by comas.

@end table

If an option availability or choice depends on another parameters, it will be noted as

@example
parameter1=@{xxx|yyy|zzz@}

parameter2=@{chars@} [[parameter1=zzz]]
@end example
meaning that parameter2 is available only if parameter1 is set to 'zzz'.

Any optional argument will be noted within hooks [].

In some cases, the argument value is more complexe and follows the 'keyval'
syntax.
This syntax will be quite familiar for users using languages like R, Python, or
certain LaTeX packages.
A keyval procedure is a name that does no contain any space, together with some
arguments within parentheses.
The arguments take the form @command{key=value}, separated by comas:
@cartouche
@example
parameter=Function(name1=value1, name2=value2)
@end example
@end cartouche
Space characters are allowed around the '=' and ',' ponctuations.

@section Variables

It is possible to recall anywhere the value of an option by using $(parameter).
@cartouche
@example
optimization.method = fullD
optimization.profiler = mydata_$(optimization.method).profile
@end example
@end cartouche
You can use this syntax to define global variables:
@cartouche
@example
data=MyData
sequence.file=$(data).fasta
input.tree=$(data).dnd
output.infos=$(data).infos
@end example
@end cartouche

Important note: it is not possible to use a macro with the 'param' option.
This is because all nested option files are parsed before the variable resolution.
Writing @command{param=$(model1).bpp} will not work, but this allows the user to override variables in nested files, as with the command line.
For instance:
@cartouche
@example
#Option file 1:
param=options2.bpp
sequence.file=$(data).fasta
sequence.format=Fasta
@end example
@end cartouche
@cartouche
@example
#Option file 2:
data=LSU
#etc
@end example
@end cartouche
 
@c ------------------------------------------------------------------------------------------------------------------

@node Reference,  , Syntax, Top
@chapter Bio++ Program Suite Reference

@c ------------------------------------------------------------------------------------------------------------------

@menu
* Input::                       
* Estimate::                    
* Simulate::                    
@end menu

@node Input, Estimate, Reference, Reference
@section Reading data

@c ------------------------------------------------------------------------------------------------------------------

@node Estimate, Simulate, Input, Reference
@section Fitting a coalHMM model

@c ------------------------------------------------------------------------------------------------------------------

@menu
* ILS::                         
* Divergence::                  
* Output::                      
@end menu

@node ILS, Divergence, Estimate, Estimate
@subsection The three-species ILS model

@node Divergence, Output, ILS, Estimate
@subsection The two-species divergence model

@node Output,  , Divergence, Estimate
@subsection Output files

@c ------------------------------------------------------------------------------------------------------------------

@node Simulate,  , Estimate, Reference
@section Simulating data

@c ------------------------------------------------------------------------------------------------------------------


@c ------------------------------------------------------------------------------------------------------------------

@c ------------------------------------------------------------------------------------------------------------------
@c end of document

@c @node Index,  , Reference, Top
@c @unnumbered Index
@c
@c @printindex cp

@bye
